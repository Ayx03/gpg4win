#! /bin/sh
patch -p1 -f -l $* < $0
exit $?

diff --git a/src/corelib/io/qsettings.cpp b/src/corelib/io/qsettings.cpp
index e12da68671..c9d2a4b80f 100644
--- a/src/corelib/io/qsettings.cpp
+++ b/src/corelib/io/qsettings.cpp
@@ -54,6 +54,8 @@
 #include "qstandardpaths.h"
 #include <qdatastream.h>

+#include <private/qsystemlibrary_p.h>
+
 #ifndef QT_NO_TEXTCODEC
 #  include "qtextcodec.h"
 #endif
@@ -951,15 +953,34 @@ void QConfFileSettingsPrivate::initAccess()
 }

 #if defined(Q_OS_WIN) && !defined(Q_OS_WINRT)
-static QString windowsConfigPath(const KNOWNFOLDERID &type)
+static QString convertCharArray(const wchar_t *path)
+{
+    return QDir::fromNativeSeparators(QString::fromWCharArray(path));
+}
+
+// Convenience for SHGetKnownFolderPath().
+static QString sHGetKnownFolderPath(const GUID &clsid)
 {
     QString result;
+    typedef HRESULT (WINAPI *GetKnownFolderPath)(const GUID&, DWORD, HANDLE, LPWSTR*);

-    PWSTR path = nullptr;
-    if (SHGetKnownFolderPath(type, KF_FLAG_DONT_VERIFY, NULL, &path) == S_OK) {
-        result = QString::fromWCharArray(path);
+    static const GetKnownFolderPath sHGetKnownFolderPath = // Vista onwards.
+        reinterpret_cast<GetKnownFolderPath>(QSystemLibrary::resolve(QLatin1String("shell32"), "SHGetKnownFolderPath"));
+
+    LPWSTR path;
+    if (Q_LIKELY(sHGetKnownFolderPath && SUCCEEDED(sHGetKnownFolderPath(clsid, KF_FLAG_DONT_VERIFY, 0, &path)))) {
+        result = convertCharArray(path);
         CoTaskMemFree(path);
     }
+    return result;
+}
+
+static QString windowsConfigPath(const KNOWNFOLDERID &type)
+{
+    QString result;
+
+    PWSTR path = nullptr;
+    result = sHGetKnownFolderPath(type);

     if (result.isEmpty()) {
         if (type == FOLDERID_ProgramData) {
diff --git a/src/plugins/platforms/windows/qwin10helpers.cpp b/src/plugins/platforms/windows/qwin10helpers.cpp
index 12cccd124b..fe444c9420 100644
--- a/src/plugins/platforms/windows/qwin10helpers.cpp
+++ b/src/plugins/platforms/windows/qwin10helpers.cpp
@@ -42,10 +42,10 @@
 #include <QtCore/QDebug>
 #include <QtCore/private/qsystemlibrary_p.h>

-#if defined(Q_CC_MINGW)
+#if 0
 #  define HAS_UI_VIEW_SETTINGS_INTEROP
 // Present from MSVC2015 + SDK 10 onwards
-#elif (!defined(Q_CC_MSVC) || _MSC_VER >= 1900) && NTDDI_VERSION >= 0xa000000
+#elif 0
 #  define HAS_UI_VIEW_SETTINGS_INTEROP
 #  define HAS_UI_VIEW_SETTINGS
 #endif
