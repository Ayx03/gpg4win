#! /bin/sh
patch -p0 -f $* < $0
exit $?

Replace kill() by TerminateProcess.  "interface" is a macro in Windows
and thus we need to rename it too.


--- gio/tests/gdbus-proxy.c~	2012-11-26 17:52:48.000000000 +0100
+++ gio/tests/gdbus-proxy.c	2013-04-30 09:56:34.301673374 +0200
@@ -23,6 +23,9 @@
 #include <gio/gio.h>
 #include <unistd.h>
 #include <string.h>
+#ifdef G_OS_WIN32
+# include <windows.h>
+#endif

 #include "gdbus-tests.h"

@@ -693,7 +696,7 @@ test_basic (GDBusProxy *proxy)
   GDBusInterfaceInfo *info;
   gchar *name;
   gchar *path;
-  gchar *interface;
+  gchar *iface;
   gint timeout;

   connection = g_bus_get_sync (G_BUS_TYPE_SESSION, NULL, NULL);
@@ -712,7 +715,7 @@ test_basic (GDBusProxy *proxy)
                 "g-flags", &flags,
                 "g-name", &name,
                 "g-object-path", &path,
-                "g-interface-name", &interface,
+                "g-interface-name", &iface,
                 "g-default-timeout", &timeout,
                 NULL);

@@ -721,13 +724,13 @@ test_basic (GDBusProxy *proxy)
   g_assert_cmpint (flags, ==, G_DBUS_PROXY_FLAGS_NONE);
   g_assert_cmpstr (name, ==, "com.example.TestService");
   g_assert_cmpstr (path, ==, "/com/example/TestObject");
-  g_assert_cmpstr (interface, ==, "com.example.Frob");
+  g_assert_cmpstr (iface, ==, "com.example.Frob");
   g_assert_cmpint (timeout, ==, -1);

   g_object_unref (conn);
   g_free (name);
   g_free (path);
-  g_free (interface);
+  g_free (iface);

   g_object_unref (connection);
 }
@@ -753,7 +756,14 @@ kill_test_service (GDBusConnection *conn
                                      &error);
   g_variant_get (ret, "(u)", &pid);
   g_variant_unref (ret);
+#ifdef G_OS_WIN32
+  {
+    HANDLE process = (HANDLE) pid;
+    TerminateProcess (process, 1);
+  }
+#else
   kill (pid, SIGTERM);
+#endif
 }

 static void
