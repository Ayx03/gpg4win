#! /bin/sh
patch -p1 -l -f $* < $0
exit $?

From fee748c75a20207987b6da49301b857182e8662d Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@intevation.de>
Date: Tue, 5 Apr 2016 12:26:19 +0200
Subject: [PATCH] Add FD_ISSET replacement for Windows

* src/estream.c (_gpgrt_fd_isset): New.
 (_gpgrt_poll): Use _gpgrt_fd_isset.

--
On Windows FD_ISSET resolves to WSAFDIsSet which would require
libgpg-error to be linked against ws2_32.
---
 src/estream.c | 24 +++++++++++++++++++++---
 1 file changed, 21 insertions(+), 3 deletions(-)

diff --git a/src/estream.c b/src/estream.c
index 737f9a5..67cb663 100644
--- a/src/estream.c
+++ b/src/estream.c
@@ -4637,6 +4637,24 @@ _gpgrt_get_nonblock (estream_t stream)
   return ret;
 }

+/* Replacement for FD_ISSET macro to avoid an extra
+   dependency against ws2_32 on Windows where FD_ISSET
+   uses WSAFDIsSet */
+int
+_gpgrt_fd_isset(int fd, fd_set *set)
+{
+#ifdef _WIN32
+  unsigned int i;
+  if (!set)
+    return 0;
+  for (i = 0; i < set->fd_count; i++)
+    if (fd == set->fd_array[i])
+      return 1;
+  return 0;
+#else
+  return FD_ISSET(fd, set);
+#endif
+}

 /* A version of poll(2) working on estream handles.  Note that not all
    estream types work with this function.  In contrast to the standard
@@ -4799,17 +4817,17 @@ _gpgrt_poll (gpgrt_poll_t *fds, unsigned int nfds, int timeout)
           item->got_hup = 1;
           any = 1;
         }
-      if (item->want_read && FD_ISSET (fd, &readfds))
+      if (item->want_read && _gpgrt_fd_isset (fd, &readfds))
         {
           item->got_read = 1;
           any = 1;
         }
-      if (item->want_write && FD_ISSET (fd, &writefds))
+      if (item->want_write && _gpgrt_fd_isset (fd, &writefds))
         {
           item->got_write = 1;
           any = 1;
         }
-      if (item->want_oob && FD_ISSET (fd, &exceptfds))
+      if (item->want_oob && _gpgrt_fd_isset (fd, &exceptfds))
         {
           item->got_oob = 1;
           any = 1;
--
2.1.4
