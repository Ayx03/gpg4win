#! /bin/sh
patch -p0 -f $* < $0
exit $?

src/
2010-12-14  Werner Koch  <wk@g10code.com>

	* cdb.h (struct cdb) [W32]: Add field CDB_MAPPING.
	* cdblib.c (cdb_init) [W32]: Save mapping handle.
	(cdb_free) [W32]: Don't leak the mapping handle from cdb_init by
	using the saved one.  Fixes bug#1010.


--- src/cdblib.c	(revision 345)
+++ src/cdblib.c	(working copy)
@@ -138,6 +138,7 @@
   mem = (unsigned char *)MapViewOfFile(hMapping, FILE_MAP_READ, 0, 0, 0);
   if (!mem)
     return -1;
+  cdbp->cdb_mapping = hMapping;
 #else
   mem = (unsigned char*)mmap(NULL, fsize, PROT_READ, MAP_SHARED, fd, 0);
   if (mem == MAP_FAILED)
@@ -174,13 +175,9 @@
 {
   if (cdbp->cdb_mem) {
 #ifdef _WIN32
-    HANDLE hFile, hMapping;
-#endif
-#ifdef _WIN32
-    hFile = (HANDLE) _get_osfhandle(cdbp->cdb_fd);
-    hMapping = CreateFileMapping(hFile, NULL, PAGE_READONLY, 0, 0, NULL);
     UnmapViewOfFile((void*) cdbp->cdb_mem);
-    CloseHandle(hMapping);
+    CloseHandle (cdbp->cdb_mapping);
+    cdbp->cdb_mapping = NULL;
 #else
     munmap((void*)cdbp->cdb_mem, cdbp->cdb_fsize);
 #endif /* _WIN32 */


--- src/cdb.h	(revision 345)
+++ src/cdb.h	(working copy)
@@ -20,6 +20,9 @@
 struct cdb {
   int cdb_fd;			/* file descriptor */
   /* private members */
+#ifdef HAVE_W32_SYSTEM
+  void *cdb_mapping;            /* Mapping handle.  */
+#endif
   cdbi_t cdb_fsize;		/* datafile size */
   const unsigned char *cdb_mem; /* mmap'ed file memory */
   cdbi_t cdb_vpos, cdb_vlen;	/* found data */

