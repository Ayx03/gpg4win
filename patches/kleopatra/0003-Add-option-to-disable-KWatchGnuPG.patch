#! /bin/sh
patch -p1 -l -f $* < $0
exit $?

From b2d4cf198d9b703f6769ccd42e044b2a552ead98 Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@intevation.de>
Date: Tue, 16 Feb 2016 18:15:47 +0100
Subject: [PATCH 3/5] Add option to disable KWatchGnuPG

KWatchGnuPG currently pulls in KTextWidgets and KNotifications
which are heavy dependencies for Kleopatra. So this can be disabled.
A better solution would probably be to make the features optional.
---
 CMakeLists.txt                 |  6 ++++++
 src/CMakeLists.txt             | 23 ++++++++++++++++++++---
 src/kwatchgnupg/CMakeLists.txt |  4 ++++
 3 files changed, 30 insertions(+), 3 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 951fd53..441e2fe 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,6 +3,7 @@ project(kleopatra)
 cmake_minimum_required(VERSION 2.8.12)

 option(FORCE_DISABLE_KCMUTILS "Force building Kleopatra without KCMUtils. Doing this will disable configuration KCM Plugins. [default=OFF]" OFF)
+option(DISABLE_KWATCHGNUPG "Don't build the kwatchgnupg tool [default=OFF]" OFF)

 # Standalone build. Find / include everything neccessary.
 set(KF5_VERSION "5.17.0")
@@ -43,10 +44,8 @@ find_package(KF5Codecs ${KF5_VERSION} CONFIG REQUIRED)
 find_package(KF5Config ${KF5_VERSION} CONFIG REQUIRED)
 find_package(KF5I18n ${KF5_VERSION} CONFIG REQUIRED)
 find_package(KF5IconThemes ${KF5_VERSION} CONFIG REQUIRED)
-find_package(KF5Notifications ${KF5_VERSION} CONFIG REQUIRED)
 find_package(KF5XmlGui ${KF5_VERSION} CONFIG REQUIRED)
 find_package(KF5WindowSystem ${KF5_VERSION} CONFIG REQUIRED)
-find_package(KF5TextWidgets ${KF5_VERSION} CONFIG REQUIRED)
 find_package(KF5DocTools ${KF5_VERSION} CONFIG)

 set_package_properties(KF5DocTools PROPERTIES DESCRIPTION "Documentation tools" TYPE OPTIONAL PURPOSE "Required to generate Kleopatra documentation.")
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 1abaa6b..6799187 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -3,7 +3,9 @@ add_subdirectory(icons)
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 include_directories(${CMAKE_CURRENT_SOURCE_DIR})

-add_subdirectory(kwatchgnupg)
+if (NOT DISABLE_KWATCHGNUPG)
+    add_subdirectory(kwatchgnupg)
+endif()
 add_subdirectory(libkleopatraclient)
 add_subdirectory(conf)
 add_subdirectory(kconf_update)
@@ -215,6 +217,21 @@ set(_kleopatra_SRCS
   main.cpp
 )

+if (KF5DBusAddons_FOUND)
+  set(_kleopatra_SRCS ${_kleopatra_SRCS} utils/kuniqueservice_dbus.cpp)
+  set(_kleopatra_dbusaddons_libs KF5::DBusAddons)
+else()
+  # Alternative currently only implemented for windows
+  set(_kleopatra_SRCS ${_kleopatra_SRCS} utils/kuniqueservice_win.cpp)
+endif()
+
+if (KF5KCMUtils_FOUND)
+  set(_kleopatra_SRCS ${_kleopatra_SRCS} conf/kcmconfiguredialog.cpp)
+  set(_kleopatra_extra_libs ${_kleopatra_extra_libs} KF5::KCMUtils)
+else()
+  set(_kleopatra_SRCS ${_kleopatra_SRCS} conf/kleopageconfigdialog.cpp)
+endif()
+
 ecm_qt_declare_logging_category(_kleopatra_SRCS HEADER kleopatra_debug.h IDENTIFIER KLEOPATRA_LOG CATEGORY_NAME log_kleopatra)

 if(KLEO_MODEL_TEST)
@@ -261,14 +278,14 @@ target_link_libraries(kleopatra_bin
   ${_kleopatra_extra_libs}
   KF5::Libkleo
   KF5::Mime
-  KF5::KCMUtils
   KF5::I18n
   KF5::XmlGui
   KF5::IconThemes
   KF5::WindowSystem
-  KF5::DBusAddons
+  ${_kleopatra_dbusaddons_libs}
   Qt5::Network
   Qt5::PrintSupport # Printing secret keys
+  KF5::CoreAddons
   ${_kleopatra_uiserver_extra_libs}
   kleopatraclientcore
 )
diff --git a/src/kwatchgnupg/CMakeLists.txt b/src/kwatchgnupg/CMakeLists.txt
index 338cad5..5f9e370 100644
--- a/src/kwatchgnupg/CMakeLists.txt
+++ b/src/kwatchgnupg/CMakeLists.txt
@@ -1,3 +1,7 @@
+
+find_package(KF5Notifications ${KF5_VERSION} CONFIG REQUIRED)
+find_package(KF5TextWidgets ${KF5_VERSION} CONFIG REQUIRED)
+
 set(kwatchgnupg_SRCS
   ../utils/kdlogtextwidget.cpp
   ../utils/gnupg-helper.cpp
--
2.1.4
