#! /bin/sh
patch -p1 -l -f $* < $0
exit $?

From bbd6f516545deead2de72adc79ddf2c5706a7836 Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@gnupg.org>
Date: Mon, 16 Dec 2019 16:31:05 +0100
Subject: [PATCH] Fix check for plain text attachments

* src/mail.cpp (Mail::checkAttachments_o): Use
count_visible_attachments.
(Mail::close): Fix safeguard check.
* src/oomhelp.cpp (count_visible_attachments): New.
* src/oomhelp.h: Add prototype.

--
The change in 0d2db8b81ab24e2ab02d7ba6832cabd07b72f852
introduced a big problem in the check for Mail::close
which then allowed writes to pass that should have
been prevented. This resulted in plaintext being written.
---
 src/mail.cpp    | 72 +++++--------------------------------------------
 src/oomhelp.cpp | 38 ++++++++++++++++++++++++++
 src/oomhelp.h   |  3 +++
 3 files changed, 48 insertions(+), 65 deletions(-)

diff --git a/src/mail.cpp b/src/mail.cpp
index e1d8b06..b2006dd 100644
--- a/src/mail.cpp
+++ b/src/mail.cpp
@@ -405,39 +405,13 @@ Mail::checkAttachments_o (bool silent)
                  SRCNAME, __func__);
       TRETURN 1;
     }
-  int count = get_oom_int (attachments, "Count");
+  int count = count_visible_attachments (attachments);
   if (!count)
     {
       gpgol_release (attachments);
       TRETURN 0;
     }

-  /* Saveguard not to warn about our own attachment */
-  if (count == 1)
-    {
-      LPDISPATCH oom_attach = get_oom_object (attachments, "Item(1)");
-      if (oom_attach)
-        {
-          char *dispName = get_oom_string (oom_attach, "DisplayName");
-          gpgol_release (oom_attach);
-
-          if (dispName && !strcmp (dispName, MIMEATTACHFILENAME))
-            {
-              xfree (dispName);
-              gpgol_release (attachments);
-              log_debug ("%s:%s: Found only our hidden mime structure.",
-                         SRCNAME, __func__);
-              TRETURN 0;
-            }
-          else if (dispName)
-            {
-              log_debug ("%s:%s: Found %s as attachment.",
-                         SRCNAME, __func__, anonstr (dispName));
-              xfree (dispName);
-            }
-        }
-    }
-
   std::string message;

   if (isEncrypted () && isSigned ())
@@ -2288,6 +2262,7 @@ Mail::closeInspector_o (Mail *mail)
   TRETURN 0;
 }

+
 int
 Mail::close (bool restoreSMIMEClass)
 {
@@ -2451,57 +2426,24 @@ Mail::close (bool restoreSMIMEClass)
        * */
       char *body = get_oom_string (m_mailitem, "Body");
       LPDISPATCH attachments = get_oom_object (m_mailitem, "Attachments");
-      int att_count = 0;
-      if (attachments)
-        {
-          att_count = get_oom_int (attachments, "Count");
-        }

-      bool foundOne = false;
       if (body && strlen (body))
         {
           log_debug ("%s:%s: Close successful. But body found. "
                      "Mail still open.",
                      SRCNAME, __func__);
         }
-      else if (att_count)
+      else if (count_visible_attachments (attachments))
         {
-          for (int i = 1; i <= att_count && !foundOne; i++)
-            {
-              std::string item_str;
-              item_str = std::string("Item(") + std::to_string (i) + ")";
-              LPDISPATCH oom_attach = get_oom_object (attachments, item_str.c_str ());
-              if (!oom_attach)
-                {
-                  log_error ("%s:%s: Failed to get attachment.",
-                             SRCNAME, __func__);
-                  continue;
-                }
-              VARIANT var;
-              VariantInit (&var);
-              if (get_pa_variant (oom_attach, PR_ATTACHMENT_HIDDEN_DASL, &var) ||
-                  (var.vt == VT_BOOL && var.boolVal == VARIANT_FALSE))
-                {
-                  foundOne = true;
-                }
-              else
-                {
-                  gpgol_release (oom_attach);
-                }
-              VariantClear (&var);
-            }
-          if (foundOne)
-            {
               log_debug ("%s:%s: Close successful. But attachments found. "
                          "Mail still open.",
                          SRCNAME, __func__);
-            }
         }
-      if (!foundOne)
+      else
         {
-          setPassWrite (true);
-          log_debug ("%s:%s: Close successful. Next write may pass.",
-                     SRCNAME, __func__);
+           setPassWrite (true);
+           log_debug ("%s:%s: Close successful. Next write may pass.",
+                      SRCNAME, __func__);
         }
       gpgol_release (attachments);
       xfree (body);
diff --git a/src/oomhelp.cpp b/src/oomhelp.cpp
index 415c256..d47d26d 100644
--- a/src/oomhelp.cpp
+++ b/src/oomhelp.cpp
@@ -3095,3 +3095,41 @@ format_dispparams (DISPPARAMS *p)
     }
   return stream.str ();
 }
+
+int
+count_visible_attachments (LPDISPATCH attachments)
+{
+  int ret = 0;
+
+  if (!attachments)
+    {
+      return 0;
+    }
+
+  int att_count = get_oom_int (attachments, "Count");
+  for (int i = 1; i <= att_count; i++)
+    {
+      std::string item_str;
+      item_str = std::string("Item(") + std::to_string (i) + ")";
+      LPDISPATCH oom_attach = get_oom_object (attachments, item_str.c_str ());
+      if (!oom_attach)
+        {
+          log_error ("%s:%s: Failed to get attachment.",
+                     SRCNAME, __func__);
+          continue;
+        }
+      VARIANT var;
+      VariantInit (&var);
+      if (get_pa_variant (oom_attach, PR_ATTACHMENT_HIDDEN_DASL, &var) ||
+          (var.vt == VT_BOOL && var.boolVal == VARIANT_FALSE))
+        {
+           ret++;
+        }
+      else
+        {
+          gpgol_release (oom_attach);
+        }
+      VariantClear (&var);
+    }
+  return ret;
+}
diff --git a/src/oomhelp.h b/src/oomhelp.h
index 9af0fe6..77264f1 100644
--- a/src/oomhelp.h
+++ b/src/oomhelp.h
@@ -440,4 +440,7 @@ bool is_draft_mail (LPDISPATCH mailitem);
 /* Returns info about a dispparms variable for debugging. */
 void format_variant (std::istringstream &stream, VARIANT *var);
 std::string format_dispparams (DISPPARAMS *p);
+
+/* Returns the count of attachments that are not hidden. */
+int count_visible_attachments (LPDISPATCH attachments);
 #endif /*OOMHELP_H*/
--
2.20.1
