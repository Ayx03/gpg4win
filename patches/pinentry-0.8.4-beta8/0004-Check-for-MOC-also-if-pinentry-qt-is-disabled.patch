#! /bin/sh
patch -p1 -l -f $* < $0
exit $?

From 52cf95c4fd97dc38856e72aa3e42a135d010df06 Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@intevation.de>
Date: Wed, 6 Aug 2014 16:09:55 +0200
Subject: [PATCH 4/4] Check for MOC also if pinentry-qt is disabled

  * configure.ac: Call QT_PATH_MOC if pinentry_qt4 is not no.

--
  Previously the MOC lookup from m4/qt.m4 would only be called
  if pinentry-qt was at least maybe. The MOC variable defined by
  this macro is also used in pinentry-qt4 though.
---
 configure.ac | 1 +
 1 file changed, 1 insertion(+)

diff --git a/configure.ac b/configure.ac
index b4133b0..595c2aa 100644
--- a/configure.ac
+++ b/configure.ac
@@ -427,6 +427,7 @@ fi)
 fi

 if test "$pinentry_qt4" != "no"; then
+QT_PATH_MOC
 PKG_CHECK_MODULES(QT4_GUI, QtGui,,
 if test "$pinentry_qt4" = "yes"; then
     AC_MSG_ERROR([[
diff -u a/configure.orig b/configure
--- a/configure.orig	2014-08-06 14:14:43.887295901 +0000
+++ b/configure	2014-08-06 14:14:53.003225375 +0000
@@ -11081,6 +11081,72 @@

 if test "$pinentry_qt4" != "no"; then

+   qt_bindirs=""
+   for dir in $qt_dirs; do
+      qt_bindirs="$qt_bindirs:$dir/bin:$dir/src/moc"
+   done
+   qt_bindirs="$qt_bindirs:/usr/bin:/usr/X11R6/bin:/usr/local/qt/bin"
+   if test ! "$ac_qt_bindir" = "NO"; then
+      qt_bindirs="$ac_qt_bindir:$qt_bindirs"
+   fi
+
+   # Extract the first word of "moc", so it can be a program name with args.
+set dummy moc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_path_MOC+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $MOC in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_MOC="$MOC" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $qt_bindirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_path_MOC="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_path_MOC" && ac_cv_path_MOC="no"
+  ;;
+esac
+fi
+MOC=$ac_cv_path_MOC
+if test -n "$MOC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MOC" >&5
+$as_echo "$MOC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+   if test "$MOC" = no; then
+    #AC_MSG_ERROR([No Qt meta object compiler (moc) found!
+    #Please check whether you installed Qt correctly.
+    #You need to have a running moc binary.
+    #configure tried to run $ac_cv_path_moc and the test didn't
+    #succeed. If configure shouldn't have tried this one, set
+    #the environment variable MOC to the right one before running
+    #configure.
+    #])
+    have_moc="no"
+   else
+    have_moc="yes"
+
+   fi
+
+
 pkg_failed=no
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for QT4_GUI" >&5
 $as_echo_n "checking for QT4_GUI... " >&6; }
