#! /bin/sh
patch -p1 -l -f $* < $0
exit $?

From edefd0e3e750849edd0008f28cd4d670b3fb7af2 Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@gnupg.org>
Date: Tue, 13 Jun 2023 14:56:49 +0200
Subject: [PATCH] Build without KIOFilewidgets and DBUS

---
 CMakeLists.txt              |  9 ++++++---
 part/part.cpp               | 16 ++++++++++++++++
 part/part.h                 |  4 ++++
 part/presentationwidget.cpp |  6 +++---
 shell/CMakeLists.txt        |  7 ++++++-
 shell/main.cpp              |  1 -
 shell/okular_main.cpp       | 11 +++++++++++
 shell/shell.cpp             |  9 ++++++++-
 shell/shell.h               |  6 +++++-
 shell/welcomescreen.cpp     |  9 +++++++++
 10 files changed, 68 insertions(+), 10 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b66bd756f..a335cfcc4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.22)
+cmake_minimum_required(VERSION 3.18)

 # KDE Application Version, managed by release script
 set (RELEASE_SERVICE_VERSION_MAJOR "23")
@@ -151,7 +151,10 @@ else()
 endif()

 if (BUILD_DESKTOP)
-    find_package(Qt5 ${QT_REQUIRED_VERSION} CONFIG REQUIRED COMPONENTS DBus)
+    find_package(Qt5DBus ${QT_REQUIRED_VERSION} CONFIG)
+    if (Qt5DBus_FOUND)
+        add_definitions(-DHAVE_DBUS)
+    endif()
     find_package(KF5 ${KF5_REQUIRED_VERSION} REQUIRED COMPONENTS Parts Crash IconThemes TextWidgets)

     find_package(KF5Purpose)
@@ -588,13 +591,13 @@ target_link_libraries(okularpart okularcore
     KF5::IconThemes
     KF5::ItemViews
     KF5::KIOCore
-    KF5::KIOFileWidgets
     KF5::KIOWidgets
     KF5::Parts
     KF5::Solid
     KF5::WindowSystem
     KF5::TextWidgets
 )
+
 if (Phonon4Qt5_FOUND)
    target_link_libraries(okularpart Phonon::phonon4qt5)
 endif()
diff --git a/part/part.cpp b/part/part.cpp
index 9c22672cf..68303e5b0 100644
--- a/part/part.cpp
+++ b/part/part.cpp
@@ -36,10 +36,13 @@
 #include <QLayout>
 #include <QMenu>
 #include <QMenuBar>
+#include <QMimeDatabase>
+#include <QMimeData>
 #include <QPrintDialog>
 #include <QPrintPreviewDialog>
 #include <QPrinter>
 #include <QScrollBar>
+#include <QScopedValueRollback>
 #include <QSlider>
 #include <QSpinBox>
 #include <QStandardPaths>
@@ -125,6 +128,11 @@
 #include <memory>
 #include <type_traits>

+#ifdef Q_OS_WIN
+#include <windows.h>
+#include <shellapi.h>
+#endif
+
 #ifdef OKULAR_KEEP_FILE_OPEN
 class FileKeeper
 {
@@ -323,6 +331,7 @@ Part::Part(QWidget *parentWidget, QObject *parent, const QVariantList &args)

     setupConfigSkeleton(args, componentName());

+#ifdef HAVE_DBUS
     numberOfParts++;
     if (numberOfParts == 1) {
         m_registerDbusName = QStringLiteral("/okular");
@@ -330,6 +339,7 @@ Part::Part(QWidget *parentWidget, QObject *parent, const QVariantList &args)
         m_registerDbusName = QStringLiteral("/okular%1").arg(numberOfParts);
     }
     QDBusConnection::sessionBus().registerObject(m_registerDbusName, this, QDBusConnection::ExportScriptableSlots);
+#endif

     // connect the started signal to tell the job the mimetypes we like,
     // and get some more information from it
@@ -986,7 +996,9 @@ void Part::setupActions()

 Part::~Part()
 {
+#ifdef HAVE_DBUS
     QDBusConnection::sessionBus().unregisterObject(m_registerDbusName);
+#endif

     m_document->removeObserver(this);

@@ -3873,7 +3885,11 @@ void Part::setEditorCmd(const QString &editorCmd)

 void Part::slotOpenContainingFolder()
 {
+#ifdef Q_OS_WIN
+    ShellExecuteW(NULL, L"explore", (wchar_t *)localFilePath().utf16(), NULL, NULL, SW_SHOWDEFAULT);
+#else
     KIO::highlightInFileManager({QUrl(localFilePath())});
+#endif
 }

 } // namespace Okular
diff --git a/part/part.h b/part/part.h
index 311824984..91b065a83 100644
--- a/part/part.h
+++ b/part/part.h
@@ -20,7 +20,11 @@
 #include <QPointer>
 #include <QProcess>
 #include <QUrl>
+#ifdef HAVE_DBUS
 #include <QtDBus> // krazy:exclude=includes
+#else
+#define Q_NOREPLY
+#endif

 #include <KCompressionDevice>
 #include <KIO/Job>
diff --git a/part/presentationwidget.cpp b/part/presentationwidget.cpp
index bd5192c53..01afad83d 100644
--- a/part/presentationwidget.cpp
+++ b/part/presentationwidget.cpp
@@ -7,9 +7,6 @@
 #include "presentationwidget.h"

 // qt/kde includes
-#include <QDBusConnection>
-#include <QDBusMessage>
-#include <QDBusReply>
 #include <QLoggingCategory>

 #include <KActionCollection>
@@ -39,6 +36,9 @@
 #include <QValidator>

 #ifdef Q_OS_LINUX
+#include <QDBusConnection>
+#include <QDBusMessage>
+#include <QDBusReply>
 #include <QDBusUnixFileDescriptor>
 #include <unistd.h> // For ::close() for sleep inhibition
 #endif
diff --git a/shell/CMakeLists.txt b/shell/CMakeLists.txt
index 597f0b74c..7b83323e3 100644
--- a/shell/CMakeLists.txt
+++ b/shell/CMakeLists.txt
@@ -23,7 +23,12 @@ ecm_add_app_icon(okular_SRCS ICONS ${ICONS_SRCS})

 add_executable(okular ${okular_SRCS})

-target_link_libraries(okular KF5::I18n KF5::Parts KF5::WindowSystem KF5::Crash KF5::IconThemes Qt5::DBus)
+target_link_libraries(okular KF5::I18n KF5::Parts KF5::WindowSystem KF5::Crash KF5::IconThemes)
+
+if(TARGET Qt5::DBus)
+    target_link_libraries(okular Qt5::DBus)
+endif()
+
 if(TARGET KF5::Activities)
     target_compile_definitions(okular PUBLIC -DWITH_KACTIVITIES=1)

diff --git a/shell/main.cpp b/shell/main.cpp
index 35f3aea65..dd08abeaf 100644
--- a/shell/main.cpp
+++ b/shell/main.cpp
@@ -21,7 +21,6 @@
 #include <QApplication>
 #include <QCommandLineOption>
 #include <QCommandLineParser>
-#include <QDBusInterface>
 #include <QTextStream>
 #include <QtGlobal>

diff --git a/shell/okular_main.cpp b/shell/okular_main.cpp
index c23f46356..43229f71b 100644
--- a/shell/okular_main.cpp
+++ b/shell/okular_main.cpp
@@ -16,8 +16,11 @@
 #include <KLocalizedString>
 #include <KWindowSystem>
 #include <QApplication>
+#ifdef HAVE_DBUS
 #include <QDBusInterface>
+#endif
 #include <QTextStream>
+#include <QTemporaryFile>

 #include "config-okular.h"
 #if HAVE_X11
@@ -43,6 +46,9 @@ static QString startupId()

 static bool attachUniqueInstance(const QStringList &paths, const QString &serializedOptions)
 {
+#ifndef HAVE_DBUS
+    return false;
+#else
     if (!ShellUtils::unique(serializedOptions) || paths.count() != 1) {
         return false;
     }
@@ -66,11 +72,15 @@ static bool attachUniqueInstance(const QStringList &paths, const QString &serial
     }

     return true;
+#endif
 }

 // Ask an existing non-unique instance to open new tabs
 static bool attachExistingInstance(const QStringList &paths, const QString &serializedOptions)
 {
+#ifndef HAVE_DBUS
+    return false;
+#else
     if (paths.count() < 1) {
         return false;
     }
@@ -159,6 +169,7 @@ static bool attachExistingInstance(const QStringList &paths, const QString &seri
     bestService->call(QStringLiteral("tryRaise"), startupId());

     return true;
+#endif
 }

 namespace Okular
diff --git a/shell/shell.cpp b/shell/shell.cpp
index 970dafb82..cbf68d419 100644
--- a/shell/shell.cpp
+++ b/shell/shell.cpp
@@ -36,11 +36,15 @@
 #include <KWindowSystem>
 #include <KXMLGUIFactory>
 #include <QApplication>
+#ifdef HAVE_DBUS
 #include <QDBusConnection>
+#endif
 #include <QDockWidget>
 #include <QDragMoveEvent>
 #include <QFileDialog>
 #include <QMenuBar>
+#include <QMimeDatabase>
+#include <QMimeData>
 #include <QObject>
 #include <QScreen>
 #include <QTabBar>
@@ -237,6 +241,7 @@ Shell::Shell(const QString &serializedOptions)
         readSettings();

         m_unique = ShellUtils::unique(serializedOptions);
+#ifdef HAVE_DBUS
         if (m_unique) {
             m_unique = QDBusConnection::sessionBus().registerService(QStringLiteral("org.kde.okular"));
             if (!m_unique) {
@@ -258,7 +263,7 @@ Shell::Shell(const QString &serializedOptions)
         }

         QDBusConnection::sessionBus().registerObject(QStringLiteral("/okularshell"), this, QDBusConnection::ExportScriptableSlots);
-
+#endif
         // Make sure that the welcome scren is visible on startup.
         showWelcomeScreen();
     } else {
@@ -333,9 +338,11 @@ Shell::~Shell()
         }
         m_tabs.clear();
     }
+#ifdef HAVE_DBUS
     if (m_unique) {
         QDBusConnection::sessionBus().unregisterService(QStringLiteral("org.kde.okular"));
     }
+#endif

     delete m_tabWidget;
 }
diff --git a/shell/shell.h b/shell/shell.h
index facffe33b..a864cb72e 100644
--- a/shell/shell.h
+++ b/shell/shell.h
@@ -20,7 +20,11 @@
 #include <kparts/readwritepart.h>

 #include <QStackedWidget>
-#include <QtDBus> // krazy:exclude=includes
+#ifdef HAVE_DBUS
+#include <QtDBus> // krazy:exclude=include
+#else
+#define Q_NOREPLY
+#endif

 #include "welcomescreen.h"

diff --git a/shell/welcomescreen.cpp b/shell/welcomescreen.cpp
index 1e4bff15e..1066c5f18 100644
--- a/shell/welcomescreen.cpp
+++ b/shell/welcomescreen.cpp
@@ -21,6 +21,11 @@

 #include "recentitemsmodel.h"

+#ifdef Q_OS_WIN
+#include <windows.h>
+#include <shellapi.h>
+#endif
+
 class RecentsListItemDelegate : public QStyledItemDelegate
 {
     Q_OBJECT
@@ -78,7 +83,11 @@ public:
                 showDirectoryAction->setIcon(QIcon::fromTheme(QStringLiteral("document-open-folder")));
                 connect(showDirectoryAction, &QAction::triggered, this, [item]() {
                     if (item->url.isLocalFile()) {
+#ifdef Q_OS_WIN
+                        ShellExecuteW(NULL, L"explore", (wchar_t *)item->url.toLocalFile().utf16(), NULL, NULL, SW_SHOWDEFAULT);
+#else
                         KIO::highlightInFileManager({item->url});
+#endif
                     }
                 });
                 menu.addAction(showDirectoryAction);
--
2.41.0
