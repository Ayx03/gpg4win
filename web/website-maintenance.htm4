m4_dnl                                                       -*-html-*-
m4_include(`template.m4')
m4_dnl $Id$

m4_define(`EN')
m4_define(`DE_FILE', `website-maintenance-de.html')

m4_define(`MAIN', `community')
m4_define(`TITLE', `Website maintenance')

PAGE_START

<div id="intro">
<h2>Maintaining the Gpg4win website</h2>
<p>The maintenance of the website is actually quite simply
because many processes are automated.
What you should be (or should become) familiar with: a text editor,
HTML, SSH and GIT.</p>
</div>

<div id="main">

<h2>Typical tasks</h1>

<p>Typical tasks of maintaining the website are:</p>
<ul>
<li> Update the version of Gpg4win (occasionally, duration: about 15 minutes)
<li> Fix typos (whenever you or someone else finds one, duration: few minutes)
</ul>


<h2>Take a first look</h2>

<ol>
<li> Get the sources for the website
     <pre>git clone git://git.gnupg.org/gpg4win.git -b website</pre>

<li> Build the website locally:
<pre>
cd web
make
</pre>

     and open it in your browser (file index.html).

<li> Read file README, make your changes, build the website
     again and reopen it in your browser.
</ol>

<h2>How to update the website and put it online</h2>

<ol>
<li> Get the source for the website:<br>
     <pre>git clone git://git.gnupg.org/gpg4win.git -b website</pre>
<li> Apply your desired changes in the directory <em>/web</em> which
     you retrieved via GIT. The file <em>README</em> in the top
     directory will provide you some helpful hints.

<li> Create local version:<br>
     <em>make</em><br>
     and open file index.html in your browser.
     
<li> Before commiting the changes you should check them:<br>
     <pre>git diff | less</pre>

<li> If your changes are complete, commit them as usual.  For example
     you can simply do:<br>
     <pre>git commit -a</pre>
         
<li>Then prepare a patch to be send to the mailing list Gpg4win-devel
    (A prior "Hello" on one of the Gpg4win <a href="https://www.gpg4win.de/community.html">mailing lists</a> and your expression of interest to join the team is of course a good idea.):<br>
    <pre>git format-patch HEAD~1 --stdout > draft.patch</pre>
    You have to replace the number behind "HEAD~" with the number of commits
    you made for the patch.

<li> The last step is to put the new version online:<br>
     <pre>make online</pre>
</ol>
</div>
