2005-10-21  Marcus Brinkmann  <marcus@g10code.de>

	* src/Makefile.am (gpg4win_pkg_gpgme_configure): Enable static
	library for gpgol.
	(gpg4win_pkg_gpgol_configure): Add gpg-error prefix.

	* src/inst-gnupg.nsi: Fix path of deleted files.

	* src/gpg4win.mk.in (pdir): Don't strip DLL files.

2005-10-20  Marcus Brinkmann  <marcus@g10code.de>

	* m4/gpg4win.m4 (GPG4WIN_DEFINE): New function.  Use it to define
	feature symbols for NSI.  Use m4_translit instead of m4_bpatsubst.
	New option --enable-debug.
	* include/config.nsi.in: Catch all this new information.
	* src/gpg4win.nsi (DEBUG): Define if [GPG4WIN_DEBUG].
	(HAVE_PKG_GPA): Don't define here.
	* src/inst-sections.nsi: Guard all package specific commands with
	feature macro checks.  Calculate dependencies on .onInit, too.
	* src/gpg4win.mk.in (STRIP_macro): Quote $(DEBUG) strictly.

	* src/installer-finish.nsi: Add support for Add/Remove Programs.

2005-10-20  Werner Koch  <wk@g10code.com>

	* m4/gpg4win.m4 (GPG4WIN_FIND): Quote a file variable.
	(GPG4WIN_SPKG): Ditto.

2005-10-20  Marcus Brinkmann  <marcus@g10code.de>

	* src/gpg4win.nsi: Add start menu support.
	* src/inst-sections.nsi: Likewise.
	* src/installer.nsi: Likewise.
	* src/installer-finish.nsi: Likewise.

	* src/gpg4win.mk.in (GETVAR): Don't quote the first $.
	(STRIP_macro): New macro.
	(SPKG, BPKG): Use it here.

	* Makefile.am (EXTRA_DIST): New target.
	* include/Makefile.am (EXTRA_DIST): Change config.nsh.in to
	config.nsi.in.
	* src/Makefile.am (EXTRA_DIST): Remove pkg-config.  Add nsi files.

	* src/inst-gpgol.nsi: Change libgpgol-0.9.3.dll to gpgol.dll.

	* src/gpg4win.mk.in (stamp/stamp-$(1)-02-configure): Add
	-mms-bitfields to CFLAGS.

	* src/gpg4win.mk.in (stamps/stamp-final): New target that replaces
	phony target final.

2005-10-20  Werner Koch  <wk@g10code.com>

	* src/*.nsi: Add a Latin-1 tag to make sure that Emacs uses the
	correct encoding.
	* doc/nsi-mode.el: Added for convenience.

2005-10-20  Marcus Brinkmann  <marcus@g10code.de>

	* configure.ac: Check for makensis.  Add gnupg as dependency for
	gpgme.  Change config.sh into config.nsi.
	* include/config.sh.in: File removed.
	* src/gpg4win.sh: File removed.
	* include/config.nsi.in: New file.
	* include/Makefile.am (EXTRA_DIST): Change config.sh.in into
	config.nsi.in.
	* src/Makefile.am (gpg4win-$(VERSION).exe): New target.
	(gpg4win-src-$(VERSION).exe): New target.
	(all-local): Remove dependency on phony target all-gpg4win.
	(all-local): Add dependency on gpg4win-$(VERSION).exe and
	gpg4win-src-$(VERSION).exe.
	(clean-local): New rule for this target.
	* src/gpg4win.nsi, src/gpg4win-src.nsi, src/inst-atk.nsi,
	src/inst-gettext.nsi, src/inst-glib.nsi, src/inst-gnupg.nsi,
	src/inst-gpa.nsi, src/inst-gpgme.nsi, src/inst-gpgol.nsi,
	src/inst-gtk+.nsi, src/inst-libgpg-error.nsi,
	src/inst-libiconv.nsi, src/inst-libpng.nsi, src/inst-pango.nsi,
	src/inst-pkgconfig.nsi, src/inst-sections.nsi, src/inst-zlib.nsi,
	src/installer-finish.nsi, src/installer.nsi: New file.

2005-10-18  Marcus Brinkmann  <marcus@g10code.de>

	configure.ac: Enable libiconv and gettext dependencies for Gtk+.

	* src/Makefile.am: First real implementation.
	* src/gpg4win.mk.in: New file.
	* configure.ac: Activate libiconv and gettext.
	(AC_CONFIG_FILES): Add packages/Makefile and src/gpg4win.mk.
	* m4/gpg4win.m4 (GPG4WIN_BPKG_GNU): New macro.
	* include/config.sh.in: Add variables for libiconv and gettext.

2005-10-15  Marcus Brinkmann  <marcus@g10code.de>

	* m4/gpg4win.m4: New file.
	* include/config.sh: Add many package variables.
	* configure.ac: Call package detection macros.
	* Makefile.am (ACLOCAL_AMFLAGS): New variable.
	* src/gpg4win.sh: Use some of the new variables.

	* packages/download.sh: Fix downloading of Gtk source packages.


 Copyright 2005 g10 Code GmbH

 This file is free software; as a special exception the author gives
 unlimited permission to copy and/or distribute it, with or without
 modifications, as long as this notice is preserved.

 This file is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
 implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
