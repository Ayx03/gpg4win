m4_dnl -*-html-*-
m4_include(`template.m4')
m4_dnl $Id$

m4_define(`DE')
m4_define(`EN_FILE', `build-installer.html')
PAGE_START

<h1>Gpg4win Installationspaket selbst herstellen</h1>

<h2>Herkömmlicher ".exe-Installer"</h2>

<p>
Der Bau eines neuen Gpg4win Installationspaketes ist
weitgehend automatisiert. Dieser Bauprozess lässt sich auf
einem GNU/Linux System oder mit Hilfe einer virtuellen Maschine
auch auf Windows- und anderen Systemen durchführen.
</p>

<p>
Was man benötigt:
</p>

<ul>
<li> <b>Gpg4win auf GNU/Linux herstellen</b>:

     <p>
     Prinzipiell sind alle aktuelleren GNU/Linux Systeme
     als Grundlage geeignet, ggf. mit kleinen Anpassungen.
     Die <a href="build-installer-gnulinux-de.html">spezielle GNU/Linux-Anleitung</a> ist getestet für
     Debian GNU/Linux 'Etch' 4.0.<br>
     Desweiteren benötigt sind mindestens 503 MByte Platz auf der
     Festplatte und eine schnelle Internetanbindung
     da ca. 60 MByte heruntergeladen werden müssen.
     </p>

<li> <b>Gpg4win auf Windows, MacOS und anderen Systemen herstellen</b>:
     <p>
     Prinzipiell sind alle aktuelleren Windows-Systeme sowie MaxOS X und andere
     Systeme, ggf. mit ein bischen Anpassungsarbeit, geeignet.<br>
     Die <a href="build-installer-on-vm-de.html">spezielle
     Windows-Anleitung</a> ist getestet für Windows XP SP2.<br>
     Desweiteren werden mindestens 1,5 GByte Platz auf der
     Festplatte sowie eine schnelle Internetanbindung benötigt,
     da ca. 360 MByte heruntergeladen werden müssen.
     </p>
</ul>

<h2>MSI Installer</h2>

<b>Achtung:</b> Der Gpg4win MSI Installer wird erst ab Gpg4win 1.9.0beta unterstützt.


<p>
Was man benötigt:
</p>

<ul>
<li> Einen vollständigen herkömmlichen Installer wie oben beschrieben in der Version und Zusammensetzung
     wie man auch das MSI-Paket haben möchte.

<li> Perl 5 auf dem verwendeten GNU/Linux System.

     <p>
     Auf Debian GNU/Linux 4.0 kann Perl 5 wie folgt installiert werden:<br>
     <em># apt-get install perl</em>
     </p>

<li> Ein Windows XP SP2 System, ausgestattet mit folgenden Programmen.

<li> Windows Installer XML (WiX) toolset Version 3.0. Diese kann von
     <a href="http://wix.sourceforge.net/">http://wix.sourceforge.net/</a> heruntergeladen werden.

<li> WiX benötigt das .NET Framework. Bisher erfolgreich funktionierte
     <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=0856EACB-4362-4B0D-8EDD-AAB15C5E04F5"
     >.NET 2.0</a>

<li> Es wird schliesslich eine Methode benötigt, wie man auf den Dateibaum
     in dem man den herrkömmlichen Installer gebaut von Windows aus zugreifen kann.
     Das geht beispielsweise über eine Netzwerkverbindung via SMB oder auch ein einfaches
     Transport-Speichermedium (mehrere hundert MByte). Siehe dazu auch der Abschnitt
     weiter unten.

</ul>

<p>
Folgende Schritte müssen nun durchgeführt werden:
</p>

<ol>
<li> Wechseln Sie in das src/ Verzeichnis des Gpg4win Quelltextes in dem Sie zuvor
     den herkömmlichen Installer gebaut haben (vergleiche
     <a href="build-installer-gnulinux-de.html">Bau von Gpg4win unter GNU/Linux</a>):<br>
     <em>$ cd src</em>

<li> Führen Sie make-msi.pl aus um die benötigten WiX Quelldateien zu erzeugen:<br>
     <em>$ perl make-msi.pl < ../include/config.nsi > gpg4win.wix</em>

<!-->
Maintainer note: The program might output the message "GUID list
stored in make-msi.guids changed, please commit!".  In this case, the
file make-msi.guids should be committed to the repository.
<--!>

<li> Wechseln Sie nun in genau das gleich Verzeichnis ("src") auf dem Windows System
     und starten Sie das Skript "make-msi.bat" um das MSI-Paket herzustellen:</br>
     <em>> make-msi.bat</em>

    <p>Diese Routine geht davon aus, dass WiX an üblicher Stelle installiert ist.
    Ist das nicht der Fall, muss ggf. der Suchpfad für ausführbare Dateien (PATH-Variable)
    angepasst werden.</p>

<li> Das MSI Paket ist nun fertig und liegt als Datei "gpg4win.msi" vor.
     Sie können es wie folgt installieren:<br>
     <em>> msiexec /i gpg4win.msi</em><br>
     und auch wieder deinstallieren:<br>
     <em>> msiexec /x gpg4win.msi</em>
</ol>

<h3>Wie man von Windows aus auf den Gpg4win Bau-Dateibaum Zugang erhält</h3>

Die WiX Programme benörigen Zugriff auf den Dateibaum in dem der
herkömmliche Installer hergestellt wurde.
Dafür gibt es viele Wege, zwei davon sind hier illustriert.
Es sind keine Schritt-für-Schritt Anleitungen, benötigen also noch
Anpassungen an die individuelle Umgebung.

<ul>
<li>Ubuntu mit VirtualBox und Samba:

   <p>Man kann Windows XP als Virtuelle Maschiene unter VirtualBox
   laufen lassen und auf den Dateibaum via SMB zugreifen in dem man auf
   dem Linux Host-System einen Samba-Server startet.
   Der Bau-Dateibaum wird als sog. "Share" freigebeben (z.B. über
   Rechte-Maustasten-Menü auf den entsprechenden Ordner "gpg4win" in Nautilus).
   Danach kann diese Netzwerkfreigabe in Windows eingebunden werden:<br>
   <em>> net use H: \\10.0.2.2\gpg4win</em><br>
   Wobei H: der dann zu verwendende Laufwerksbuchstabe ist und gpg4win
   der Name der Netzwerkfreigabe.
   </p>

<li>Mit Achivierungsprogramm "tar":

    <p>Eine Liste aller notwendigen Dateien wird durch make-msi.pl
    in de Datei make-msi.files gespeichert. Diese Liste kann nun
    benutzt werden um alle benötigten Dateien einzuopacken und zu transportieren:<br>
    <em>$ cd gpg4win</em><br>
    <em>$ tar -T src/make-msi.files cjf gpg4win-msi.tar.bz2</em>
    </p>

   <p>Neben gpg4win-msi.tar.bz wird ausserdem src/gpg4win.wix und
   src/make-msi.bat auf dem Windows-System benötigt. Sie sollten dort
   auch wieder in das src/ Verzeichnis abgelgegt werden.
</ul>
