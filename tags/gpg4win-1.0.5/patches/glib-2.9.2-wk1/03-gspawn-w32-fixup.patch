#! /bin/sh
patch -p1 -f $* < $0
exit $?

This patch is needed to complete 02-gspawn-w32.patch by Werner: When
the complete path is used, it may contain spaces, and thus it needs to
be quoted.

2006-05-29  Marcus Brinkmann  <marcus@g10code.com>

	* glib/gspawn-win32.c (do_spawn_with_pipes): Protect the first
	argument by quotes.

diff -ru glib-2.9.2-wk1-orig/glib/gspawn-win32.c glib-2.9.2-wk1/glib/gspawn-win32.c
--- glib-2.9.2-wk1-orig/glib/gspawn-win32.c	2006-05-29 00:12:10.000000000 +0200
+++ glib-2.9.2-wk1/glib/gspawn-win32.c	2006-05-29 00:13:16.000000000 +0200
@@ -696,7 +696,7 @@
         helper_process = helper_process_buf; /* Yes, use that one. */
     }
 
-  new_argv[0] = helper_process;
+  new_argv[0] = protect_argv_string (helper_process);
   _g_sprintf (args[ARG_CHILD_ERR_REPORT], "%d", child_err_report_pipe[1]);
   new_argv[ARG_CHILD_ERR_REPORT] = args[ARG_CHILD_ERR_REPORT];
   
@@ -800,6 +800,7 @@
 	  g_error_free (conv_error);
 	  g_strfreev (protected_argv);
 	  g_free (new_argv[ARG_WORKING_DIRECTORY]);
+	  g_free (new_argv[0]);
 	  g_free (new_argv);
 	  g_free (whelper);
 	  
@@ -814,6 +815,7 @@
 	  g_error_free (conv_error);
 	  g_strfreev (protected_argv);
 	  g_free (new_argv[ARG_WORKING_DIRECTORY]);
+	  g_free (new_argv[0]);
 	  g_free (new_argv);
 	  g_free (whelper);
 	  g_strfreev ((gchar **) wargv);
@@ -855,6 +857,7 @@
 	  g_error_free (conv_error);
 	  g_strfreev (protected_argv);
 	  g_free (new_argv[ARG_WORKING_DIRECTORY]);
+	  g_free (new_argv[0]);
 	  g_free (new_argv);
 	  
 	  return FALSE;
@@ -868,6 +871,7 @@
 	  g_error_free (conv_error);
 	  g_strfreev (protected_argv);
 	  g_free (new_argv[ARG_WORKING_DIRECTORY]);
+	  g_free (new_argv[0]);
 	  g_free (new_argv);
 	  g_strfreev (cpargv);
 	  
@@ -899,6 +903,7 @@
   g_strfreev (protected_argv);
 
   g_free (new_argv[ARG_WORKING_DIRECTORY]);
+  g_free (new_argv[0]);
   g_free (new_argv);
 
   /* Check if gspawn-win32-helper couldn't be run */
